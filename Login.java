import javax.swing.*;
import java.awt.*;

public class Login extends JFrame {
    private JTextField cardIDField, nameField;
    private JButton accessButton;
    private String signupCardID, signupCardholder;
    // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Signup

    public Login(String cardID, String cardholder) {
        this.signupCardID = cardID;  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å Signup
        this.signupCardholder = cardholder;
        setTitle("Login");
        setSize(1000, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // üëâ Sidebar (‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢)
        JPanel sidebar = new JPanel();
        sidebar.setBackground(new Color(33, 79, 155)); // ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏°
        sidebar.setPreferredSize(new Dimension(220, getHeight()));
        sidebar.setLayout(new BoxLayout(sidebar, BoxLayout.Y_AXIS));

        JLabel logo = new JLabel("ü™∑The White Lotus", SwingConstants.CENTER);
        logo.setForeground(Color.WHITE);
        logo.setFont(new Font("Arial", Font.BOLD, 18));


        JButton backButton = new JButton("‚¨ÖBack");

        backButton.setAlignmentX(Component.CENTER_ALIGNMENT);

        sidebar.add(Box.createVerticalStrut(20));
        sidebar.add(logo);

        sidebar.add(Box.createVerticalGlue());
        sidebar.add(backButton);

        // üëâ ‡∏û‡∏≤‡πÄ‡∏ô‡∏•‡∏´‡∏•‡∏±‡∏Å (Main Content)
        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(null);
        mainPanel.setBackground(new Color(230, 240, 255));

        JLabel lockIcon = new JLabel("üîí Log in");
        lockIcon.setFont(new Font("Arial", Font.BOLD, 20));
        lockIcon.setBounds(370, 30, 200, 30);
        mainPanel.add(lockIcon);

        JLabel cardIDLabel = new JLabel("Card ID:");
        cardIDLabel.setBounds(250, 90, 100, 25);
        mainPanel.add(cardIDLabel);

        JTextField cardIDField = new JTextField();
        cardIDField.setBounds(370, 90, 200, 30);
        mainPanel.add(cardIDField);

        JLabel nameLabel = new JLabel("Cardholder:");
        nameLabel.setBounds(250, 140, 120, 25);
        mainPanel.add(nameLabel);

        JTextField nameField = new JTextField();
        nameField.setBounds(370, 140, 200, 30);
        mainPanel.add(nameField);

        JLabel permissionsLabel = new JLabel("Permissions:");
        permissionsLabel.setBounds(250, 190, 100, 25);
        mainPanel.add(permissionsLabel);

        // üè¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° Floor (‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏±‡πâ‡∏ô‡∏°‡∏µ 12 ‡∏´‡πâ‡∏≠‡∏á)
        JPanel floorPanel = new JPanel(new FlowLayout());
        floorPanel.setBounds(370, 190, 400, 100);
        for (int i = 1; i <= 3; i++) {  // ‡∏°‡∏µ 3 ‡∏ä‡∏±‡πâ‡∏ô
            JButton floorButton = new JButton("Floor " + i);
            floorButton.setBackground(new Color(245, 230, 230));
            floorPanel.add(floorButton);

            int floor = i;
            floorButton.addActionListener(e -> showRoomSelection(floor));
        }
        mainPanel.add(floorPanel);

        // ‡∏õ‡∏∏‡πà‡∏° Access
        JButton accessButton = new JButton("Access");
        accessButton.setBounds(420, 300, 120, 40);
        accessButton.setBackground(new Color(80, 50, 120));
        accessButton.setForeground(Color.black);
        mainPanel.add(accessButton);

        // ‡∏õ‡∏∏‡πà‡∏° Settings (‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á)
        JButton settingsButton = new JButton("‚öô");
        settingsButton.setBounds(780, 400, 50, 50);
        settingsButton.setBackground(new Color(120, 90, 150));
        settingsButton.setForeground(Color.WHITE);
        mainPanel.add(settingsButton);

        // ‡πÄ‡∏û‡∏¥‡πà‡∏° ActionListener ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏° backButton
        backButton.addActionListener(e -> {
            new CustomersFrame(); // ‡πÄ‡∏õ‡∏¥‡∏î CustomersFrame
            dispose(); // ‡∏õ‡∏¥‡∏î Login
        });

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏•‡∏á‡πÉ‡∏ô Frame
        add(sidebar, BorderLayout.WEST);
        add(mainPanel, BorderLayout.CENTER);

        setLocationRelativeTo(null);
        setVisible(true);
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å
        accessButton.addActionListener(e -> {
            if (cardIDField.getText().equals(signupCardID) && nameField.getText().equals(signupCardholder)) {
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "Welcome to the White Lotus"
                JOptionPane.showMessageDialog(this, "ü™∑ Welcome to the White Lotus!");
                openDashboard();
            } else {
                JOptionPane.showMessageDialog(this, "‚ùå Invalid login credentials.");
            }
        });

        mainPanel.add(accessButton);

        add(sidebar, BorderLayout.WEST);
        add(mainPanel, BorderLayout.CENTER);

        setLocationRelativeTo(null);
        setVisible(true);
    }

    public Login() {

    }

    private void openDashboard() {
        new DashboardPanel();  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        dispose();  // ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á Login
    }



    // üè† ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏±‡πâ‡∏ô (‡∏°‡∏µ 12 ‡∏´‡πâ‡∏≠‡∏á)
    private void showRoomSelection(int floor) {
        JFrame roomFrame = new JFrame("Floor " + floor + " Rooms");
        roomFrame.setSize(400, 300);
        roomFrame.setLayout(new GridLayout(3, 4, 10, 10));

        for (int i = 1; i <= 12; i++) {
            JButton roomButton = new JButton("Room " + i);
            roomButton.addActionListener(e -> {
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
                JOptionPane.showMessageDialog(this, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå");
                roomFrame.dispose();  // ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à
            });
            roomFrame.add(roomButton);
        }

        roomFrame.setLocationRelativeTo(this);
        roomFrame.setVisible(true);
    }

    private void checkCardStatus(String cardId) {
        String status = DataModel.getCards().toString();  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å DataModel
        if ("Revoked".equals(status)) {
            JOptionPane.showMessageDialog(this, "‚ùå This card has been revoked and cannot be used.");
            return;  // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
        }
        // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ñ‡πâ‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô "Revoked"
    }



    public static void main(String... args) {
        new Login("229", "Bookbig");
    }

}

